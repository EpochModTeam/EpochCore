class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class Helicopter: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"velka vrtule dive", "",
			"mala vrtule dive",	"",
			"main rotor", "velka vrtule dive", //"velka vrtule"
			"tail rotor", "mala vrtule dive",   //"mala vrtule"
			"main_turret","",
			"main_gun","main_turret",
			"alt","",
			"alt2","",
			"nm_alt","",
			"nm_alt2","",
			"mph","",
			"mph2","",
			"vert_speed","",
			"vert_speed2","",
			"rpm","",
			"rpm2","",
			"horizont","",
			"horizont2","",
			"compass","",
			"compass2","",
			"hodinova","",
			"hodinova2","",
			"minutova","",
			"minutova2","",
			"damageHide",""
		};
	};
	class uh1h_Epoch_skeleton: Helicopter
	{
		skeletonInherit="Helicopter";
		isDiscrete=0;
		skeletonBones[]=
		{
		  //"new bone","parent bone"
			"gear1","",
			"gear2","",
			"door1","",
			"door2","",
			"stick_pilot","",
			"stick_copilot","",
			"lever_pilot","",
			"lever_copilot","",
			"throttle_pilot","lever_pilot",
			"throttle_switch_pilot","lever_pilot",
			"display_off","",
			"horizont1_bank","",
			"horizont1_pitch","",
			"horizont2pilot","",
			"horizont2pilot_b","",
			"horizont3stred","",
			"horizont3stred_b","",
			"fuel","",
			"displays","",
			"compass3","",
			"compass4","",
			"main_gun_axis","",
			"muzzleFlash","",
			"Civilian_hide","",
			"PositionLights",		"",
			"CollisionLight_Red",	"",
			"CollisionLight_White",	"",
			"cerveny pozicni", "",
            "zeleny pozicni", "",
			"rotordive","rotorbank",
			"rotor static dive","rotorbank",
			"rotorbank","main rotor",
			"horizont_1","",
//mg1
			"mg1_main_turret","",
			"mg1_main_gun","mg1_main_turret",
			"mg1_ammo_belt","mg1_main_gun",
			"mg1_feedtray_cover","mg1_main_gun",
			"mg1_bolt","mg1_main_gun_Shake",
			"mg1_bullet001","mg1_bullet002",
			"mg1_bullet002","mg1_bullet003",
			"mg1_bullet003","mg1_bullet004",
			"mg1_bullet004","mg1_bullet005",
			"mg1_bullet005","mg1_bullet006",
			"mg1_bullet006","mg1_bullet007",
			"mg1_bullet007","mg1_bullet008",
			"mg1_bullet008","mg1_ammo_belt",
			"mg1_magazine","mg1_main_gun",
			"mg1_charging_handle","mg1_main_gun",
			"mg1_trigger","mg1_main_gun",
			"mg1_zasleh","mg1_main_gun",			
//mg2
			"mg2_main_turret","",
			"mg2_main_gun","mg2_main_turret",
			"mg2_ammo_belt","mg2_main_gun",
			"mg2_feedtray_cover","mg2_main_gun",
			"mg2_bolt","mg2_main_gun_Shake",
			"mg2_bullet001","mg2_bullet002",
			"mg2_bullet002","mg2_bullet003",
			"mg2_bullet003","mg2_bullet004",
			"mg2_bullet004","mg2_bullet005",
			"mg2_bullet005","mg2_bullet006",
			"mg2_bullet006","mg2_bullet007",
			"mg2_bullet007","mg2_bullet008",
			"mg2_bullet008","mg2_ammo_belt",
			"mg2_magazine","mg2_main_gun",
			"mg2_charging_handle","mg2_main_gun",
			"mg2_trigger","mg2_main_gun",
			"mg2_zasleh","mg2_main_gun"		
		};
		//isDiscrete = 1; /// 1 stands for discrete skinning values (0 or 100 % for each vertex of every selection), 0 stands for non-discrete (each vertex may have different skinning values for selections - animations have just partial effect on that vertex)

	};

	};
class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh",
		    "zbytek",
		    "trup"			
		};
	};
	class Helicopter: Vehicle
	{

		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)

		sectionsInherit="Vehicle";
		sections[]=
		{
			"sklo predni p",
			"sklo predni l",
			"main rotor blur",
			"main rotor static",
			"tail rotor blur",
			"tail rotor static",
			"zasleh_1",
			"motor",
			"elektronika",
			"munice",
			"zbran",
			"vez",
			"trup",
			"clan",
			"clan_sign",
			"glass1",
			"glass2",
			"glass3",
			"glass4",
			"glass5",
			"glass6",
			"podsvit pristroju"
		};
		skeletonName="Helicopter";
		class Animations
		{
			class Rotor_destructX
			{
				type="rotationX";
				source="damage";
				selection="main rotor";
				axis="velka osa";
				animPeriod=0;
				minValue=0.99;
				maxValue=1;
				angle0=0;
				angle1="rad -20";
			};
			class Rotor_destructY:Rotor_destructX
			{
				type="rotationY";
				angle1="rad +40";
			};
			class rotordive_destructX:Rotor_destructX
			{
				selection="rotordive";
				angle1="rad -5";
			};
			class rotordive_destructY:rotordive_destructX
			{
				type="rotationY";
				angle1="rad -15";
			};
			class rotordive_destructZ:rotordive_destructX
			{
				type="rotationZ";
				angle1="rad -5";
			};
			class rotor_static_dive_destructX:Rotor_destructX
			{
				selection="rotor static dive";
				angle1="rad 5";
			};
			class rotor_static_dive_destructY:rotor_static_dive_destructX
			{
				type="rotationY";
				angle1="rad -15";
			};
			class rotor_static_dive_destructZ:rotor_static_dive_destructX
			{
				type="rotationZ";
				angle1="rad -5";
			};
			class mala_vrtule_destructY:Rotor_destructX
			{
				type="rotationY";
				axis="mala osa";
				selection="tail rotor";
				angle1="rad 10";
			};
			class mala_vrtule_destructZ:mala_vrtule_destructY
			{
				type="rotationZ";
				angle1="rad 25";
			};
			// destruct BASE END

			class damageHide
			{
				  type="hide";
				  source="damage";
				  selection="damageHide";
			};
            class IndicatorAltBaro: Rotation
			{
				source="altBaro";
				sourceAddress="loop";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="nm_alt2";
				axis="osa_nm_alt2";
			};
			class IndicatorAltRadar: Rotation
			{
				source="altRadar";
				selection="alt";
				axis="osa_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="alt2";
				axis="osa_alt2";
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="osa_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="osa_mph2";
			};
			class IndicatorVertSpeed: Rotation
			{
				source="vertSpeed";
				selection="vert_speed";
				axis="osa_vert_speed";
				memory=0;
				minValue=-30;
				maxValue=30;
				angle1=-5.2359881;
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="osa_vert_speed2";
				memory=0;
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="osa_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="osa_rpm2";
			};
			class IndicatorCompass: Rotation
			{
				source="direction";
				selection="compass";
				axis="axis_compass";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="compass2";
				axis="axis_compass2";
			};
			class WatchHour: Rotation
			{
				source="clockHour";
				selection="hodinova";
				axis="axis_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="axis_time2";
			};
			class WatchMinute: Rotation
			{
				source="clockMinute";
				selection="minutova";
				axis="axis_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="axis_time2";
			};
			class RotorTilt
			{
				selection="rotordive";
				source="rpm";
				axis="velka osa";
				type="translation";
				memory=1;
				minValue=0.0000000;
				maxValue=12.0000000; //2.0000000
				offset0=0.00000;
				offset1=-1.82000; //-2.92000
			};			
			class HRotor: Rotation
			{
				source="rotorH";
				selection="main rotor";
				axis="velka osa";
				angle1="2 * 3.1415926536";
			};
			class VRotor: Rotation
			{
				source="rotorV";
				selection="tail rotor";
				axis="mala osa";
				angle1="2 * 3.1415926536";
			};
			class RotorHDive
			{
				selection="rotorbank";
				axis="predni osa naklonu";
				type="rotationX";
				source="horizonDive";
				minValue=-0.5;
				maxValue=0.5;
				angle0="rad -4";
				angle1="rad 4";
				animPeriod=0;
			};			
			class RotorHBank
			{
				selection="rotorbank";
				axis="predni osa naklonu";
				type="rotationZ";
				source="horizonBank";
				minValue=-0.5;
				maxValue=0.5;
				angle0="rad 10";
				angle1="rad -10";
			};			
			class HorizonBank
			{
				type="rotationZ";
				source="horizonBank";
				selection="horizont";
				axis="osa_horizont";
				memory="false";
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizonDive";
				selection="horizont";
				axis="osa_horizont";
				memory=0;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283190;
				angle1=6.283190;
			};
			class Horizon2Bank: HorizonBank
			{
				selection="horizont2";
				axis="osa_horizont2";
			};
			class Horizon2Dive: HorizonDive
			{
				selection="horizont2";
				axis="osa_horizont2";
			};
		};
	};
	class uh1h_Epoch: Helicopter
	{
		skeletonName="uh1h_Epoch_skeleton";
		sectionsInherit="Helicopter";
		sections[]=
		{
			"zbytek",
			"camo1",
			"camo2",
			"muzzleFlash",
			"Light_L",
			"Light_R",
			"Light_L_hitpoint",
			"Light_R_hitpoint"
		};
		class Animations: Animations
		{
			//------------------------------------- BUDIKY --------------------------------------
			class display_on //hides display_off selection
			{
				type="hide";
				source="rpm";
				selection="display_off";
				minValue=-0.8;
				maxValue=0.2;
				hidevalue=0.9;
				sourceAddress="clamp";
			};

			class Horizont1_Bank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont1_bank";
				axis="osa_horizont1_bank";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad +360";
				angle1="rad -360";
			};
			class Horizont1_Pitch
			{
				type="rotation";
				source="horizonDive";
				selection="horizont1_pitch";
				axis="osa_horizont1_pitch";
				memory=1;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283190;
				angle1=6.283190;
			};
			class Horizont2_Dive
			{
				type="translation";
				source="horizonDive";
				selection="horizont2pilot";
				axis="osa_horizont2vert";
				memory=1;
				minValue=-1.000000;
				maxValue=1.000000;
				offset0=-0.30000;
				offset1=0.30000;
			};
			class Horizont2_Bank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont2pilot";
				axis="osa_horizont2pilot";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class IndicatorRPM: IndicatorRPM
			{
				angle1="rad -350";
			};
			class IndicatorRPM2: IndicatorRPM2
			{
				angle1="rad -235";
			};
			class Horizon2_Bank_B: Horizont2_Bank
			{
				selection="horizont2pilot_b";
			};
			class Horizont3_Dive: Horizont2_Dive
			{
				selection="horizont3stred";
				axis="osa_horizont3vert";
			};
			class Horizont3_Bank: Horizont2_Bank
			{
				selection="horizont3stred";
				axis="osa_horizont3stred";
			};
			class Horizon3_Bank_B: Horizont3_Bank
			{
				selection="horizont3stred_b";
			};
			class IndicatorFuel: Rotation
			{
				source="Fuel";
				selection="fuel";
				axis="axis_fuel";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				angle0=0.000000;
				angle1=-5.1;
			};
			class Monitors_on
			{
				type = "hide";
				source = "rpm";
				selection = "displays";
				sourceAddress = "mirror";
				minValue = -1.5;
				maxValue = 0;
				hideValue = 0.99;
			};
			class IndicatorCompass3: IndicatorCompass
			{
				selection="compass3";
				axis="axis_compass3";
			};
			class IndicatorCompass4: IndicatorCompass
			{
				selection="compass4";
				axis="axis_compass4";
			};
			class PositionLights
			{
				type = hide;
				source = collisionLights;
				selection = "PositionLights";
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.0;
				unHideValue = 0.5;
			};
 			class CollisionLight_Red_blinking: PositionLights
			{
				source = CollisionLightRed_source;
				selection = "CollisionLight_Red";
			};
 			class CollisionLight_White_blinking: PositionLights
			{
				source = CollisionLightWhite_source;
				selection = "CollisionLight_White";
			};
			#define STICK_ANGLE (rad 8)
			class stick_pilot_dive_01 // cyclic
			{
				type = "rotationX";
				source = "cyclicForward";
				axis = "stick_pilot_joint";
				selection = "stick_pilot";
				minValue = -0.499999;
				maxValue = 0.499999;
				angle0 = STICK_ANGLE / 3;
				angle1 = - STICK_ANGLE / 3;
			};
			class stick_pilot_dive_02: stick_pilot_dive_01 {minValue = -0.849999; maxValue = -0.5; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_03: stick_pilot_dive_01 {minValue = -1; maxValue = -0.85; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_04: stick_pilot_dive_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = - STICK_ANGLE / 3;};
			class stick_pilot_dive_05: stick_pilot_dive_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = - STICK_ANGLE / 3;};

			class stick_pilot_bank_01: stick_pilot_dive_01
			{
				type = "rotationZ";
				source = "cyclicAside";
				angle0 =  STICK_ANGLE / 3;
				angle1 = - STICK_ANGLE / 3;
			};
			class stick_pilot_bank_02: stick_pilot_bank_01 {minValue = -0.849999; maxValue = -0.5; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_03: stick_pilot_bank_01 {minValue = -1; maxValue = -0.85; angle0 =  STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_04: stick_pilot_bank_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = - STICK_ANGLE / 3;};
			class stick_pilot_bank_05: stick_pilot_bank_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = - STICK_ANGLE / 3;};

			class stick_copilot_dive01: stick_pilot_dive_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive02: stick_pilot_dive_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive03: stick_pilot_dive_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive04: stick_pilot_dive_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive05: stick_pilot_dive_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class stick_copilot_bank01: stick_pilot_bank_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank02: stick_pilot_bank_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank03: stick_pilot_bank_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank04: stick_pilot_bank_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank05: stick_pilot_bank_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class lever_pilot: rotation
			{
				source = "collectiveRTD";
				selection = "lever_pilot";
				axis = "lever_pilot_axis";
				angle0 = "rad -3";
				angle1 = "rad 12";
			};
			class lever_copilot: lever_pilot {selection = "lever_copilot"; axis = "lever_copilot_axis";};
			class HideWeapons:damageHide
			{
				selection="Civilian_hide";
				source="Proxy";					
				animPeriod=0;			
			};	
			class HideMinigun:damageHide
			{
				selection="main_gun_axis";
				source="Proxy";					
				animPeriod=0;			
			};			
		};
	};
    	class uh1h_armed_Epoch: uh1h_Epoch
		{
		skeletonName="uh1h_Epoch_skeleton";
		sectionsInherit="Helicopter";
		sections[]=
		{
		  "mg1_zasleh",
		  "mg2_zasleh",
		  "zbytek",
		  "trup"
		};	
		 class Animations: Animations
		{	
//mg1
			class mg1_MuzzleFlashROT
 			{
 				type="rotation";
 				source="mg1_flash_source";
 				sourceAddress="loop";
 				selection="mg1_zasleh";
 				axis="mg1_barrel_axis";
 				centerFirstVertex=true;
 				minValue=0;
 				maxValue=4;
 				angle0="rad 0";
 				angle1="rad 360";
 			};
			class mg1_Main_Turret
			{
				source = "mg1_Main_turret";
				selection = "mg1_main_turret";
				axis = "mg1_main_turret_axis";
				type = "rotationy";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
			};
			class mg1_Main_Gun: mg1_Main_Turret 
			{
				type = "rotationX";
				source = "mg1_main_gun";
				selection = "mg1_main_gun";
				axis = "mg1_main_gun_axis"; 
			};
			class mg1_trigger 
			{
				type = "rotationX";
				source = "mg1_reloadAnim";
				selection = "mg1_trigger";
				axis = "mg1_trigger_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad -15";
			};
			class mg1_magazine_hide 
			{
				type="hide";
				source="mg1_ReloadMagazine";
				selection="mg1_magazine";
				minValue=0; 
				maxValue=0.1;
				hideValue=1;
			};
			class mg1_ammo_belt_rotation 
			{
				type="rotationZ";
				source="mg1_ReloadAnim";
				selection="mg1_ammo_belt";
				axis="mg1_ammobelt_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0.000000;
				maxValue=1.000000;
				angle0=0.087266;
				angle1=-0.174533;
			};
			class mg1_ammobelt_reload 
			{
				type="hide";
				source="mg1_ReloadMagazine";
				selection="mg1_ammo_belt";
				minValue=0;
				maxValue=1;				
				hideValue=0.1;
			};
			class mg1_feedtray_cover_up 
			{
				type="rotation";
				source="mg1_ReloadMagazine";
				selection="mg1_feedtray_cover";
				axis="mg1_feedtray_cover_axis";
				minValue=0; 
				maxValue=0.1; 
				angle0="0";   
				angle1="rad -90"; 		
			};
			class mg1_feedtray_cover_down: mg1_feedtray_cover_up 
			{
				minValue=0.9;
				maxValue=1;
				angle1="rad 90";
			};
			class mg1_Charging_handle_reload_begin 
			{
				type="translation";
				source="mg1_ReloadMagazine";
				memory = 1;
				animPeriod = 0;
				selection="mg1_charging_handle";
				axis="mg1_barrel_axis";
				minValue = 0.0;
				maxValue = 0.02;
				minPhase = 0.0;
				maxPhase = 0.02;
				offset0 = 0.0;
				offset1 = 0.5;
			};
			class mg1_Charging_handle_reload_end: mg1_Charging_handle_reload_begin
			{
				minValue = 0.05;
				maxValue = 0.07;
				minPhase = 0.05;
				maxPhase = 0.07;
				offset0 = 0.0;
				offset1 = -0.5;
			};
			class mg1_Bullet001 
			{
				type="hide";
				source="mg1_Revolving";
				selection="mg1_bullet001";
				sourceAddress="mirror";
				minValue = -1;
				maxValue = 0;
				minphase = -1;
				maxphase = 0;
				hideValue = 0.89001;
			};
			class mg1_Bullet002: mg1_Bullet001 
			{
				selection="mg1_Bullet002";
				hideValue = 0.90001;
			};
			class mg1_Bullet003: mg1_Bullet001 
			{
				selection="mg1_Bullet003";
				hideValue = 0.91001004;
			};
			class mg1_Bullet004: mg1_Bullet001 
			{
				selection="mg1_Bullet004";
				hideValue = 0.92001003;
			};
			class mg1_Bullet005: mg1_Bullet001 
			{
				selection="mg1_Bullet005";
				hideValue = 0.93001;
			};
			class mg1_Bullet006: mg1_Bullet001 
			{
				selection="mg1_Bullet006";
				hideValue = 0.94001;
			};
			class mg1_Bullet007: mg1_Bullet001 
			{
				selection="mg1_Bullet007";
				hideValue = 0.95001;
			};
			class mg1_Bullet008: mg1_Bullet001 
			{
				selection="mg1_Bullet008";
				hideValue = 0.96001;
			};
			class mg1_Bullet009: mg1_Bullet001 
			{
				selection="mg1_Bullet009";
				hideValue = 0.97001004;
			};
			class mg1_Bullet010: mg1_Bullet001 
			{
				selection="mg1_Bullet010";
				hideValue = 0.98001003;
			};
//mg2
			class mg2_MuzzleFlashROT: mg1_MuzzleFlashROT
 			{
 				source="mg2_flash_source";
 				selection="mg2_zasleh";
 				axis="mg2_barrel_axis";
 			};
			class mg2_main_turret
			{
				source = "mg2_main_turret";
				selection = "mg2_main_turret";
				axis = "mg2_main_turret_axis";
				type = "rotationY";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
			};
			class mg2_main_gun: mg2_main_turret 
			{
				type = "rotationX";
				source = "mg2_main_gun";
				selection = "mg2_main_gun";
				axis = "mg2_main_gun_axis";
			};
			class mg2_trigger 
			{
				type = "rotationX";
				source = "mg2_reloadAnim";
				selection = "mg2_trigger";
				axis = "mg2_trigger_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = "rad 0";
				angle1 = "rad -15";
			};
			class mg2_magazine_hide 
			{
				type="hide";
				source="mg2_ReloadMagazine";
				selection="mg2_magazine";
				minValue=0; 
				maxValue=0.1;
				hideValue=1;
			};
			class mg2_ammo_belt_rotation 
			{
				type="rotationZ";
				source="mg2_ReloadAnim";
				selection="mg2_ammo_belt";
				axis="mg2_ammobelt_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0.000000;
				maxValue=1.000000;
				angle0=0.087266;
				angle1=-0.174533;
			};
			class mg2_ammobelt_reload 
			{
				type="hide";
				source="mg2_ReloadMagazine";
				selection="mg2_ammo_belt";
				minValue=0;
				maxValue=1;				
				hideValue=0.1;
			};
			class mg2_feedtray_cover_up 
			{
				type="rotation";
				source="mg2_ReloadMagazine";
				selection="mg2_feedtray_cover";
				axis="mg2_feedtray_cover_axis";
				minValue=0; 
				maxValue=0.1; 
				angle0="0";   
				angle1="rad -90"; 		
			};
			class mg2_feedtray_cover_down: mg2_feedtray_cover_up 
			{
				minValue=0.9;
				maxValue=1;
				angle1="rad 90";
			};
			class mg2_Charging_handle_reload_begin 
			{
				type="translation";
				source="mg2_ReloadMagazine";
				memory = 1;
				animPeriod = 0;
				selection="mg2_charging_handle";
				axis="mg2_barrel_axis";
				minValue = 0.0;
				maxValue = 0.02;
				minPhase = 0.0;
				maxPhase = 0.02;
				offset0 = 0.0;
				offset1 = 0.5;
			};
			class mg2_Charging_handle_reload_end: mg2_Charging_handle_reload_begin
			{
				minValue = 0.05;
				maxValue = 0.07;
				minPhase = 0.05;
				maxPhase = 0.07;
				offset0 = 0.0;
				offset1 = -0.5;
			};
			class mg2_Bullet001 
			{
				type="hide";
				source="mg2_Revolving";
				selection="mg2_bullet001";
				sourceAddress="mirror";
				minValue = -1;
				maxValue = 0;
				minphase = -1;
				maxphase = 0;
				hideValue = 0.89001;
			};
			class mg2_Bullet002: mg2_Bullet001 
			{
				selection="mg2_Bullet002";
				hideValue = 0.90001;
			};
			class mg2_Bullet003: mg2_Bullet001 
			{
				selection="mg2_Bullet003";
				hideValue = 0.91001004;
			};
			class mg2_Bullet004: mg2_Bullet001 
			{
				selection="mg2_Bullet004";
				hideValue = 0.92001003;
			};
			class mg2_Bullet005: mg2_Bullet001 
			{
				selection="mg2_Bullet005";
				hideValue = 0.93001;
			};
			class mg2_Bullet006: mg2_Bullet001 
			{
				selection="mg2_Bullet006";
				hideValue = 0.94001;
			};
			class mg2_Bullet007: mg2_Bullet001 
			{
				selection="mg2_Bullet007";
				hideValue = 0.95001;
			};
			class mg2_Bullet008: mg2_Bullet001 
			{
				selection="mg2_Bullet008";
				hideValue = 0.96001;
			};
			class mg2_Bullet009: mg2_Bullet001 
			{
				selection="mg2_Bullet009";
				hideValue = 0.97001004;
			};
			class mg2_Bullet010: mg2_Bullet001 
			{
				selection="mg2_Bullet010";
				hideValue = 0.98001003;
			};
		
			
		};
		};		
	};