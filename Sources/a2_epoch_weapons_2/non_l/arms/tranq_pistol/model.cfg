class CfgSkeletons
{
	class Default
	{
		isDiscrete=1;
		skeletonInherit="";
		skeletonBones[]={};
	};
	class tranq_pistol_skel: Default
	{
		skeletonBones[]=
		{
			"magazine",	"",
			"slide", "",
			"hammer", "",
			"trigger","",
			"zasleh", ""
			
		};
	};
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[]={};
		skeletonName="";
	};
	class tranq_pistol: Default
	{
		sections[]=
		{
			"zasleh",
			"magazine",
			"trigger",
			"slide",
			"hammer",
			"camo1"
		};
		skeletonName="tranq_pistol_skel";
		class Animations
		{
		
		class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="slide";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				minPhase = 0.6;
				maxPhase = 0.9;
				axis = "slide_axis";
				offset0=0;
				offset1=0.39;
			};
			
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="slide";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis = "slide_axis";
				offset0=0;
				offset1=0.39;
			};
			
			class magazine_reload_move_1
 			{
 				type = "translation";
 				source = "reloadMagazine";
 				selection = "magazine";
 				axis = "magazine_axis";
 				minValue = 0.14;
 				maxValue = 0.172;
				minPhase = 0.14;
				maxPhase = 0.172;
 				offset0 = 0.0;
 				offset1 = 0.7;
 			};
						
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.6;
				maxPhase=0.6;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			
				class magazine_reload_move_3
 			{
 				type = "translation";
 				source = "reloadMagazine";
 				selection = "magazine";
 				axis = "magazine_axis";
 				minValue = 0.61;
 				maxValue = 0.7;
				minPhase = 0.61;
				maxPhase = 0.7;
 				offset0 = 0.0;
 				offset1 = -0.7;							
 			};
			
			class trigger_move
			
			{
				type="translation";
				source="reload";
				selection="trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "trigger_Axis";
				minValue=0.1;
				maxValue=0.3;
				minPhase=0.1;
				maxPhase=0.3;
				angle0=0.01;
				angle1=-0.512389;
 				offset0 = 0.0;
 				offset1 = -0.3;					
			};
			
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
		
		};
	};
};

