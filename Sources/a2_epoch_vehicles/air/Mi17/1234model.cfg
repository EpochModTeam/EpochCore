class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};
	class Helicopter: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"velka vrtule dive", "",
			"mala vrtule dive",	"",
			"main rotor", "velka vrtule dive",
			"tail rotor", "mala vrtule dive",
			"otocvez","",
			"otochlaven","otocvez",
			"alt","",
			"alt2","",
			"nm_alt","",
			"nm_alt2","",
			"mph","",
			"mph2","",
			"vert_speed","",
			"vert_speed2","",
			"rpm","",
			"rpm2","",
			"horizont","",
			"horizont2","",
			"compass","",
			"compass2","",
			"hodinova","",
			"hodinova2","",
			"minutova","",
			"minutova2","",
			"damageHide",""
		};
	};
	class a2_Mi8_epoch_skeleton: Helicopter
	{
		skeletonInherit="Helicopter";
		isDiscrete=0;
		skeletonBones[]=
		{
			"gear1","",
			"gear2","",
			"door1","",
			"door2","",
			"stick_pilot","",
			"stick_copilot","",
			"lever_pilot","",
			"lever_copilot","",
			"throttle_pilot","lever_pilot",
			"throttle_switch_pilot","lever_pilot",
			"display_off","",
			"horizont1_bank","",
			"horizont1_pitch","",
			"horizont2pilot","",
			"horizont2pilot_b","",
			"horizont3stred","",
			"horizont3stred_b","",
			"fuel","",
			"displays","",
			"compass3","",
			"compass4","",

			"rocketB1","",
			"rocketB2","",
			"rocketB3","",
			"rocketB4","",
			"rocketB5","",
			"rocketB6","",
			"rocketB7","",
			"rocketB8","",
			"rocketB9","",
			"rocketB10","",
			"rocketB11","",
			"rocketB12","",
			"OtocHlavne","",
			"muzzleFlash","",
			"Civilian_hide","",
			"PositionLights",		"",
			"CollisionLight_Red",	"",
			"CollisionLight_White",	"",
			"damper_front","",
			"damper_right","",
			"damper_left","",
			"rpm3","",
			"rpm4","",
			"otocvez2","",
			"otochlaven2","otocvez2",
			"otocvez3","",
			"otochlaven3",
			"otocvez3",
			"velka vrtule","",
			"rotordive","velka vrtule",
			"rotor static dive","velka vrtule",
			"fan1","",
			"fan2","",
			"HUD","",
			"HUD_Hide","HUD",

			"AH_bank","",
			"AH_bank2","",
			"AH_pitch","",
			"AH_pitch2","",

			"OtocHlaven_Shake","OtocHlaven",
			"OtocHlaven_Shake_2","OtocHlaven2",
			"OtocHlaven_Shake_3","OtocHlaven3",

			"ammo_belt","OtocHlaven_Shake",
			"ammo_belt_2","OtocHlaven_Shake_2",
			"ammo_belt_3","OtocHlaven_Shake_3",

			"bullet001","bullet002",
			"bullet002","bullet003",
			"bullet003","bullet004",
			"bullet004","bullet005",
			"bullet005","bullet006",
			"bullet006","ammo_belt",
			"bullet007hide","OtocHlaven_Shake",
			"magazine","OtocHlaven_Shake",

			"bullet001_2","bullet002_2",
			"bullet002_2","bullet003_2",
			"bullet003_2","bullet004_2",
			"bullet004_2","bullet005_2",
			"bullet005_2","bullet006_2",
			"bullet006_2","ammo_belt_2",
			"bullet007_2hide","OtocHlaven_Shake_2",
			"magazine_2","OtocHlaven_Shake_2",

			"bullet001_3","bullet002_3",
			"bullet002_3","bullet003_3",
			"bullet003_3","bullet004_3",
			"bullet004_3","bullet005_3",
			"bullet005_3","bullet006_3",
			"bullet006_3","ammo_belt_3",
			"bullet007_3hide","OtocHlaven_Shake_3",
			"magazine_3","OtocHlaven_Shake_3"			
		};
	};
};
class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};
	class Helicopter: Vehicle
	{

		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)

		sectionsInherit="Vehicle";
		sections[]=
		{
			"sklo predni p",
			"sklo predni l",
			"main rotor blur",
			"main rotor static",
			"tail rotor blur",
			"tail rotor static",
			"zasleh_1",
			"motor",
			"elektronika",
			"munice",
			"zbran",
			"vez",
			"trup",
			"clan",
			"clan_sign",
			"glass1",
			"glass2",
			"glass3",
			"glass4",
			"glass5",
			"glass6",
			"podsvit pristroju"
		};
		skeletonName="Helicopter";
		class Animations
		{
			class Rotor_destructX
			{
				type="rotationX";
				source="damage";
				selection="main rotor";
				axis="velka osa";
				animPeriod=0;
				minValue=0.99;
				maxValue=1;
				angle0=0;
				angle1="rad -20";
			};
			class Rotor_destructY:Rotor_destructX
			{
				type="rotationY";
				angle1="rad +40";
			};
			class rotordive_destructX:Rotor_destructX
			{
				selection="rotordive";
				angle1="rad -5";
			};
			class rotordive_destructY:rotordive_destructX
			{
				type="rotationY";
				angle1="rad -15";
			};
			class rotordive_destructZ:rotordive_destructX
			{
				type="rotationZ";
				angle1="rad -5";
			};
			class rotor_static_dive_destructX:Rotor_destructX
			{
				selection="rotor static dive";
				angle1="rad 5";
			};
			class rotor_static_dive_destructY:rotor_static_dive_destructX
			{
				type="rotationY";
				angle1="rad -15";
			};
			class rotor_static_dive_destructZ:rotor_static_dive_destructX
			{
				type="rotationZ";
				angle1="rad -5";
			};
			class mala_vrtule_destructY:Rotor_destructX
			{
				type="rotationY";
				axis="mala osa";
				selection="tail rotor";
				angle1="rad 10";
			};
			class mala_vrtule_destructZ:mala_vrtule_destructY
			{
				type="rotationZ";
				angle1="rad 25";
			};
			// destruct BASE END

			class damageHide
			{
				  type="hide";
				  source="damage";
				  selection="damageHide";
			};
            class IndicatorAltBaro: Rotation
			{
				source="altBaro";
				sourceAddress="loop";
				selection="alt";
				axis="axis_alt";
				memory=0;
				maxValue=304;
				angle1="rad -360";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="alt2";
				axis="axis_alt2";
			};
			class IndicatorAltRadar: Rotation
			{
				source="altRadar";
				selection="nm_alt";
				axis="axis_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="nm_alt2";
				axis="axis_nm_alt2";
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="axis_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="axis_mph2";
			};
			class IndicatorVertSpeed: Rotation
			{
				source="vertSpeed";
				selection="vert_speed";
				axis="axis_vert_speed";
				minValue=-30;
				maxValue=30;
				angle1="rad -300";
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="axis_vert_speed2";
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="axis_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="axis_rpm2";
			};
			class IndicatorCompass: Rotation
			{
				source="direction";
				selection="compass";
				axis="axis_compass";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="compass2";
				axis="axis_compass2";
			};
			class WatchHour: Rotation
			{
				source="clockHour";
				selection="hodinova";
				axis="axis_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="axis_time2";
			};
			class WatchMinute: Rotation
			{
				source="clockMinute";
				selection="minutova";
				axis="axis_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="axis_time2";
			};
			class HRotor: Rotation
			{
				source="rotorH";
				selection="main rotor";
				axis="velka osa";
				angle1="2 * 3.1415926536";
			};
			class VRotor: Rotation
			{
				source="rotorV";
				selection="tail rotor";
				axis="mala osa";
				angle1="2 * 3.1415926536";
			};
			class HorizonBank
			{
				type="rotationZ";
				source="horizonBank";
				selection="horizont";
				axis="axis_horizont";
				memory="false";
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class HorizonDive
			{
				type="rotationX";
				source="horizonDive";
				selection="horizont";
				axis="axis_horizont";
				memory=0;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283190;
				angle1=6.283190;
			};
			class Horizon2Bank: HorizonBank
			{
				selection="horizont2";
				axis="axis_horizont2";
			};
			class Horizon2Dive: HorizonDive
			{
				selection="horizont2";
				axis="axis_horizont2";
			};
		};
	};
	class a2_Mi8_epoch_base: Helicopter
	{
		skeletonName="a2_Mi8_epoch_skeleton";
		sectionsInherit="Helicopter";
		sections[]=
		{
			"zbytek",
			"camo1",
			"muzzleFlash",
			"Light_L",
			"Light_R",
			"Light_L_hitpoint",
			"Light_R_hitpoint"
		};
		class Animations: Animations
		{
			//------------------------------------- BUDIKY --------------------------------------
			class display_on //hides display_off selection
			{
				type="hide";
				source="rpm";
				selection="display_off";
				minValue=-0.8;
				maxValue=0.2;
				hidevalue=0.9;
				sourceAddress="clamp";
			};

			class Horizont1_Bank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont1_bank";
				axis="axis_horizont1_bank";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad +360";
				angle1="rad -360";
			};
			class Horizont1_Pitch
			{
				type="rotation";
				source="horizonDive";
				selection="horizont1_pitch";
				axis="axis_horizont1_pitch";
				memory=1;
				minValue=-6.283190;
				maxValue=6.283190;
				angle0=-6.283190;
				angle1=6.283190;
			};
			class Horizont2_Dive
			{
				type="translation";
				source="horizonDive";
				selection="horizont2pilot";
				axis="axis_horizont2vert";
				memory=1;
				minValue=-1.000000;
				maxValue=1.000000;
				offset0=-0.30000;
				offset1=0.30000;
			};
			class Horizont2_Bank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont2pilot";
				axis="axis_horizont2pilot";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class IndicatorRPM: IndicatorRPM
			{
				angle1="rad -350";
			};
			class IndicatorRPM2: IndicatorRPM2
			{
				angle1="rad -235";
			};
				
			class Horizon2_Bank_B: Horizont2_Bank
			{
				selection="horizont2pilot_b";
			};
			class Horizont3_Dive: Horizont2_Dive
			{
				selection="horizont3stred";
				axis="axis_horizont3vert";
			};
			class Horizont3_Bank: Horizont2_Bank
			{
				selection="horizont3stred";
				axis="axis_horizont3stred";
			};
			class Horizon3_Bank_B: Horizont3_Bank
			{
				selection="horizont3stred_b";
			};
			class IndicatorFuel: Rotation
			{
				source="Fuel";
				selection="fuel";
				axis="axis_fuel";
				memory=1;
				minValue=0.000000;
				maxValue=1.000000;
				angle0=0.000000;
				angle1=-5.1;
			};
			class Monitors_on
			{
				type = "hide";
				source = "rpm";
				selection = "displays";
				sourceAddress = "mirror";
				minValue = -1.5;
				maxValue = 0;
				hideValue = 0.99;
			};
			class IndicatorCompass3: IndicatorCompass
			{
				selection="compass3";
				axis="axis_compass3";
			};
			class IndicatorCompass4: IndicatorCompass
			{
				selection="compass4";
				axis="axis_compass4";
			};

			//------------------------------------- BUDIKY END --------------------------------------

			class door1
			{
				type="translation";
				axis="doorX_axis";
				animPeriod=1;
				source="Doors";
				selection="door1";
				offset0=0;
				offset1=1.00;
				minValue=0;
				maxValue=0.05;
			};
			class door1_posunZ: door1
			{
				axis="doorZ_axis";
				offset0=0;
				offset1=1.0;
				minValue=0;
				maxValue=1;
			};
			class gear1
			{
				type="rotation";
				source="altSurface";
				selection="gear1";
				axis="gear1_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.300000;
				angle0=0;
				angle1=-0.4;
			};
			class gear2
			{
				type="translation";
				source="altSurface";
				selection="gear2";
				axis="gear2_axis";
				memory=1;
				minValue=0.000000;
				maxValue=0.300000;
				offset0=0;
				offset1=-0.4;
			};

			//------------------------------------ LIGHTS ------------------------------------
			class PositionLights
			{
				type = hide;
				source = collisionLights;
				selection = "PositionLights";
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.0;
				unHideValue = 0.5;
			};
 			class CollisionLight_Red_blinking: PositionLights
			{
				source = CollisionLightRed_source;
				selection = "CollisionLight_Red";
			};
 			class CollisionLight_White_blinking: PositionLights
			{
				source = CollisionLightWhite_source;
				selection = "CollisionLight_White";
			};
			//------------------------------------- GUN --------------------------------------
			class MachineGun: Rotation
			{
				selection="otocHlavne";
				axis="axis_otocHlavne";
				angle1 = "rad 2000*43";
				source="Gatling";
			};
			class muzzleFlashROT
			{
				type="rotationZ";
				source="Gatling_flash";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="muzzleFlash";       //selection we want to rotate
				axis="";                  //no own axis - center of rotation is computed from selection
				centerFirstVertex=true;   //use first vertex of selection as center of rotation
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
			};

			class hidePG_1
			{
				type = "hide";
				selection = "rocketB1";
				animPeriod=0;
				source="Missiles_revolving";
				sourceAddress="mirror";
				minValue=-1.000000;
				maxValue= 0.000000;
				hideValue=(11/12)+0.0000001;			
			};
			class hidePG_2: hidePG_1
			{
				selection = "rocketB2";
				hideValue=(10/12)+0.0000001;
			};
			class hidePG_3: hidePG_1
			{
				selection = "rocketB3";
				hideValue=(9/12)+0.0000001;
			};
			class hidePG_4: hidePG_1
			{
				selection = "rocketB4";
				hideValue=(8/12)+0.0000001;
			};
			class hidePG_5: hidePG_1
			{
				selection = "rocketB5";
				hideValue=(7/12)+0.0000001;
			};
			class hidePG_6: hidePG_1
			{
				selection = "rocketB6";
				hideValue=(6/12)+0.0000001;
			};
			class hidePG_7: hidePG_1
			{
				selection = "rocketB7";
				hideValue=(5/12)+0.0000001;
			};
			class hidePG_8: hidePG_1
			{
				selection = "rocketB8";
				hideValue=(4/12)+0.0000001;
			};
			class hidePG_9: hidePG_1
			{
				selection = "rocketB9";
				hideValue=(3/12)+0.0000001;
			};
			class hidePG_10: hidePG_1
			{
				selection = "rocketB10";
				hideValue=(2/12)+0.0000001;
			};
			class hidePG_11: hidePG_1
			{
				selection = "rocketB11";
				hideValue=(1/12)+0.0000001;
			};
			class hidePG_12: hidePG_1
			{
				selection = "rocketB12";
				hideValue=(0/12)+0.0000001;
			};

///*** movement of pilot and copilot sticks ***///
			#define STICK_ANGLE (rad 8)
			class stick_pilot_dive_01 // cyclic
			{
				type = "rotationX";
				source = "cyclicForward";
				axis = "stick_pilot_joint";
				selection = "stick_pilot";
				minValue = -0.499999;
				maxValue = 0.499999;
				angle0 = STICK_ANGLE / 3;
				angle1 = - STICK_ANGLE / 3;
			};
			class stick_pilot_dive_02: stick_pilot_dive_01 {minValue = -0.849999; maxValue = -0.5; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_03: stick_pilot_dive_01 {minValue = -1; maxValue = -0.85; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_dive_04: stick_pilot_dive_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = - STICK_ANGLE / 3;};
			class stick_pilot_dive_05: stick_pilot_dive_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = - STICK_ANGLE / 3;};

			class stick_pilot_bank_01: stick_pilot_dive_01
			{
				type = "rotationZ";
				source = "cyclicAside";
				angle0 =  STICK_ANGLE / 3;
				angle1 = - STICK_ANGLE / 3;
			};
			class stick_pilot_bank_02: stick_pilot_bank_01 {minValue = -0.849999; maxValue = -0.5; angle0 = STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_03: stick_pilot_bank_01 {minValue = -1; maxValue = -0.85; angle0 =  STICK_ANGLE / 3; angle1 = 0;};
			class stick_pilot_bank_04: stick_pilot_bank_01 {minValue = 0.5; maxValue = 0.849999; angle0 = 0; angle1 = - STICK_ANGLE / 3;};
			class stick_pilot_bank_05: stick_pilot_bank_01 {minValue = 0.85; maxValue = 1; angle0 = 0; angle1 = - STICK_ANGLE / 3;};

			class stick_copilot_dive01: stick_pilot_dive_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive02: stick_pilot_dive_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive03: stick_pilot_dive_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive04: stick_pilot_dive_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_dive05: stick_pilot_dive_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class stick_copilot_bank01: stick_pilot_bank_01 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank02: stick_pilot_bank_02 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank03: stick_pilot_bank_03 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank04: stick_pilot_bank_04 {selection = "stick_copilot"; axis = "stick_copilot_joint";};
			class stick_copilot_bank05: stick_pilot_bank_05 {selection = "stick_copilot"; axis = "stick_copilot_joint";};

			class lever_pilot: rotation
			{
				source = "collectiveRTD";
				selection = "lever_pilot";
				axis = "lever_pilot_axis";
				angle0 = "rad -3";
				angle1 = "rad 12";
			};
			class lever_copilot: lever_pilot {selection = "lever_copilot"; axis = "lever_copilot_axis";};
			class HideWeapons:damageHide
			{
				selection="Civilian_hide";
				source="Proxy";					
				animPeriod=0;			
			};	
			class HideMinigun:damageHide
			{
				selection="OtocHlavne";
				source="Proxy";					
				animPeriod=0;			
			};			
		};
	};
	class a2_Mi8_epoch: a2_Mi8_epoch_base
	{
		sectionsInherit="a2_Mi8_epoch_base";
		sections[]=
		{
			"zasleh","zasleh2"
		};
		class Animations: Animations
		{
			class MainTurret
			{
				type="rotationY";
				source="mainTurret";
				selection="OtocVez";
				axis="OsaVeze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainGun: MainTurret
			{
				type="rotation";
				source="mainGun";
				selection="OtocHlaven";
				axis="OsaHlavne";
				angle0="rad +360";
				angle1="rad -360";
			};
			class Turret_2: MainTurret
			{
				source="Turret_2";
				selection="OtocVez2";
				axis="OsaVeze2";
			};
			class Gun_2: MainGun
			{
				source="Gun_2";
				selection="OtocHlaven2";
				axis="OsaHlavne2";
			};
			class otocvez_damage: damageHide
			{
				selection="otocvez";
			};
			class otocvez_2_damage: damageHide
			{
				selection="otocvez2";
			};
			class ammo_belt_rotation
			{
				source="ReloadAnim";
				selection="ammo_belt";
				axis="ammo_belt_axis";
				memory=1;

				offset0=0.184;
				offset1=0.0;
				type="translation";
  				minValue=0.3;
  				maxValue=1.0;
			};
			class ammo_belt_2_rotation: ammo_belt_rotation
			{
				source="ReloadAnim_2";
				selection="ammo_belt_2";
				axis="ammo_belt_axis_2";
			};
			class ammo_belt_bullet007hide_hide:ammo_belt_rotation
			{
				type="hide";
				selection="bullet007hide";
				sourceAddress="mirror";
				minValue=-1.0;
				maxValue=0.0;
				hideValue=0.25;
			};
			class ammo_belt_bullet007_2hide_hide:ammo_belt_2_rotation
			{
				type="hide";
				selection="bullet007_2hide";
				sourceAddress="mirror";
				minValue=-1.0;
				maxValue=0.0;
				hideValue=0.25;
			};
			class Turret_shake:ammo_belt_rotation
			{
				type="translation";
				sourceAddress="mirror";
				selection="OtocHlaven_Shake";
				axis="osaveze";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside:Turret_shake
			{
				axis="osahlavne";
				maxValue=0.05*1.3;
				offset0=0;
				offset1=-0.02;
			};
			class Turret_shake_2:ammo_belt_2_rotation
			{
				type="translation";
				sourceAddress="mirror";
				selection="OtocHlaven_Shake_2";
				axis="osaveze2";
				offset0=0;
				offset1=-0.002;
				minValue=0.0;
				maxValue=0.05;
			};
			class Turret_shake_aside_2:Turret_shake_2
			{
				axis="osahlavne2";
				maxValue=0.05*1.3;
				offset0=0;
				offset1=-0.02;
			};
			class Magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="magazine";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};
			class Magazine_2_hide
			{
				type="hide";
				source="reloadMagazine_2";
				sourceAddress="mirror";
				selection="magazine_2";
				minValue=0.0;
				maxValue=0.5;
				hideValue=0.56;
			};
			class bullet007hide_hide: Magazine_hide
			{
				selection="bullet007hide";
				hideValue=0.005;
			};
			class bullet007_2hide_hide: bullet007hide_hide
			{
				selection="bullet007_2hide";
			};
		};
	};
};